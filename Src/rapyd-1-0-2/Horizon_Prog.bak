(lp1
(dp2
S'ModulePrevious'
p3
S'MA_41_Prog'
p4
sS'ModuleCurrent'
p5
S'Horizon_Prog'
p6
sS'Version'
p7
I1
sS'Geometry'
p8
S'1917x1008+-8+0'
p9
sS'ProjectName'
p10
g6
sS'ImportTypes'
p11
(lp12
(S'Pmw'
p13
S'import'
p14
tp15
a(S'Tkinter'
p16
S'from'
p17
tp18
asS'EditorWidths'
p19
((lp20
I132
aI132
a(lp21
I132
aI132
a(lp22
I130
aI130
atp23
sS'ID'
p24
S'Rapyd Project'
p25
sS'ParkingLot'
p26
(dp27
S'SelectedWidreq'
p28
NsS'Widreqs'
p29
(lp30
ssa(dp31
S'PreviousForm'
p32
S'-Main-'
p33
sS'OnTab'
p34
I1
sg33
(dp35
S'Cursor'
p36
S'9.22'
p37
sS'Text'
p38
(lp39
S''
aS'#!/usr/bin/python\n#coding=utf8\n\n'
p40
aS'import rpErrorHandler\nfrom Tkinter import *\n'
p41
aV\u000aimport configparser\u000aconfig = configparser.ConfigParser()\u000aconfig.read('last.ini')\u000a\u000aconnected=0\u000aCOMtimeout=30\u000astop_reading_COM=0\u000atrim=7\u000a\u000adef lamp_wdg_0():\u000a    write_ram_eep('lamp wdg 0')\u000a    write_ram_eep('at thr gas 1')    \u000a    write_ram_eep('at thr alm 5')    \u000a\u000adef read_string_from_serial():\u000a    char = '*'\u000a    string=""\u000a    while (char<>'') and (char <> '\u005cr'):\u000a        char=ser.read()\u000a        string=string+char\u000a        if char=='\u005cr':\u000a            string=string+'\u005cn'     \u000a        if (char=='') and (string<>""):         \u000a            string=string+'\u005cn'\u000a    return string\u000a\u000adef read_and_print(disable_stop):\u000a    string=''\u000a    if stop_reading_COM==1 and disable_stop==0: return ''\u000a    global connected\u000a    if connected==1: \u000a        string=read_string_from_serial()\u000a        if string<>"":\u000a            App._ReceivedText.insert('1.0', string)  \u000a    return string\u000a            \u000adef verify(string,value,type):\u000a    if type=='ataddr':\u000a        if string.upper().find(("0X"+str(hex(numh()*256+numl()))[2:].zfill(4)).upper())==-1: return 0\u000a    if type=='ipaddr':\u000a        if string.find(value)==-1: return 0\u000a    if type=='macaddr':\u000a        if string.find(value[:12]+str(hex(numh())[2:]).upper().zfill(2)+':'+str(hex(numl())[2:]).upper().zfill(2))==-1: return 0\u000a        \u000a    return 1\u000a        \u000a\u000a\u000adef write_and_verify(param,value,type):\u000a    if value=='': return 1 #1-ok, 0-not ok\u000a    global stop_reading_COM\u000a    stop_reading_COM=1        \u000a\u000a    write_eep(param+' '+value)\u000a    string=write_eep(param)      \u000a\u000a    if verify(string,value,type)==0:\u000a        stop_reading_COM=0\u000a        return 0\u000a        \u000a    stop_reading_COM=0\u000a    return 1\u000a    \u000a    \u000adef loopproc():             \u000a     read_and_print(0)\u000a     setup_ip_mac_etc() \u000a     Root.after(COMtimeout,loopproc) \u000a\u000adef write_ram(string):\u000a    read_and_print(1)\u000a    ser.write(string+'\u005cr') \u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_eep(string):\u000a    read_and_print(1)\u000a    ser.write('eeprom '+string+'\u005cr')\u000a    read_and_print(1)\u000a    return read_and_print(1)\u000a    \u000adef write_ram_eep(string):      \u000a    write_eep(string)\u000a    write_ram(string)\u000a    \u000a    \u000adef numh():\u000a    return int(math.floor(int(App.serial_number.get())/1000))\u000a   \u000adef numl():\u000a    return int(int(App.serial_number.get()) % 1000)\u000a\u000adef setup_ip_mac_etc():  \u000a\u000a    if App.serial_number.get()=='':return\u000a\u000a    try:\u000a        int(App.serial_number.get())\u000a    except:\u000a        App.serial_number.set('')\u000a        mbox.showerror('\u041e\u0448\u0438\u0431\u043a\u0430','\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b!')\u000a        return\u000a        \u000a        \u000a\u000a    if App.device.get()=='ma41' or App.device.get()=='ma45' or App.device.get()=='ma48' :    \u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lsr4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('')\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('')        \u000a\u000a    if App.device.get()=='lse4':\u000a        App.ataddr.set(hex(numh()*256+numl()))\u000a        App.phyipaddr.set('10.2.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:14:'+hex(numh())[2:]+':'+hex(numl())[2:]) \u000a\u000a    if App.device.get()=='1m500':            \u000a        App.ataddr.set('')\u000a        App.phyipaddr.set('10.1.'+str(numh())+'.'+str(numl()))\u000a        App.ethipaddr.set('10.0.'+str(numh())+'.'+str(numl()))\u000a        App.phymacaddr.set('00:11:D8:13:'+hex(numh())[2:]+':'+hex(numl())[2:])\u000a        App.ethmacaddr.set('00:11:D8:14:'+hex(numh())[2:]+':'+hex(numl())[2:])          \u000a        \u000a    if App.device.get()=='ma45' : \u000a        App._ma45_treshold_patch.config(state="normal")\u000a    else:   \u000a        App._ma45_treshold_patch.config(state="disabled")\u000a\u000atry:\u000a    #--------------------------------------------------------------------------#\u000a    # User code should go after this comment so it is inside the "try".        #\u000a    #     This allows rpErrorHandler to gain control on an error so it         #\u000a    #     can properly display a Rapyd-aware error message.                    #\u000a    #--------------------------------------------------------------------------#\u000a\u000a    #Adjust sys.path so we can find other modules of this project\u000a   \u000a   \u000a\u000a    \u000a    \u000a    \u000a    if '.' not in sys.path:\u000a        sys.path.append('.')\u000a    #Put lines to import other modules of this project here\u000a \u000a    import sys\u000a    \u000a    import serial\u000a    import msvcrt\u000a    import time\u000a    import math\u000a    import tkMessageBox as mbox\u000a \u000a \u000a    \u000a    if __name__ == '__main__':\u000a
p42
aS"        Root = Tk()\n        import Tkinter\n        Tkinter.CallWrapper = rpErrorHandler.CallWrapper\n        del Tkinter\n        App = Horizon_Prog(Root)\n        App.pack(expand='yes',fill='both')\n"
p43
aS"        Root.geometry('1000x860+10+10')\n        Root.title('Horizon programming')\n\n        \n        Root.after(COMtimeout,loopproc)\n        \n        def left_key(event): \n           if App.ArrowKeysOn.get()==1:\n               if connected==1:\n                   App._on__left_command()\n            \n        def right_key(event):\n           if App.ArrowKeysOn.get()==1:\n                if connected==1:\n                   App._on__right_command()            \n\n        def up_key(event):\n                if connected==1:\n                   App._on__prog_and_increment_command()                \n        \n        Root.bind('<Left>', left_key)\n        Root.bind('<Right>', right_key)\n        Root.bind('<Up>', up_key)\n\n        \n        Root.mainloop()\n    #--------------------------------------------------------------------------#\n    # User code should go above this comment.                                  #\n    #--------------------------------------------------------------------------#\nexcept:\n    rpErrorHandler.RunError()"
p44
asg7
I0
sS'Sha'
p45
I566655
ssS'Forms'
p46
(lp47
(dp48
S'Requested'
p49
g38
sS'Name'
p50
S'Horizon_Prog'
p51
sg28
NsS'Type'
p52
S'Tkinter.Frame'
p53
sS'Lines'
p54
(lp55
(lp56
I9852
aI4994
aI1
aa(lp57
I2518
aI4994
aI1
aa(lp58
I1259
aI943
aI0
aa(lp59
I1259
aI1282
aI0
aa(lp60
I1259
aI9323
aI0
aa(lp61
I1259
aI8464
aI0
aa(lp62
I1259
aI7836
aI0
aa(lp63
I1259
aI7316
aI0
aa(lp64
I1259
aI3325
aI0
aa(lp65
I1259
aI2394
aI0
aa(lp66
I1259
aI1584
aI0
aa(lp67
I1259
aI1971
aI0
aa(lp68
I475
aI8150
aI1
aa(lp69
I1283
aI8150
aI1
aa(lp70
I1580
aI8888
aI1
aa(lp71
I6182
aI5502
aI0
aa(lp72
I6182
aI6505
aI0
aa(lp73
I6182
aI8561
aI0
aa(lp74
I6182
aI9069
aI0
aa(lp75
I6182
aI6892
aI0
aa(lp76
I6182
aI7388
aI0
aa(lp77
I6182
aI9335
aI0
aa(lp78
I6182
aI5985
aI0
aa(lp79
I6182
aI4135
aI0
aa(lp80
I6182
aI1729
aI0
aa(lp81
I4424
aI2926
aI1
aasg38
(dp82
g36
S'481.37'
p83
sg38
(lp84
S'#------------------------------------------------------------------------------#\n#                                                                              #\n#                                 Horizon_Prog                                 #\n#                                                                              #\n#------------------------------------------------------------------------------#\nclass Horizon_Prog(Frame):\n    def __init__(self,Master=None,*pos,**kw):\n'
p85
aS'        #\n        #Your code here\n        #    \n'
p86
aV\u000a        apply(Frame.__init__,(self,Master),kw)\u000a        self.device = StringVar()\u000a        self.ArrowKeysOn = IntVar()\u000a        self.ataddr = StringVar()\u000a        self.entry_at_addr = StringVar()\u000a        self.entry_at_addr_exe = StringVar()\u000a        self.entry_at_addr_rt = StringVar()\u000a        self.dev_mac = StringVar()\u000a        self.ethipaddr = StringVar()\u000a        self.ethmacaddr = StringVar()\u000a        self.ifbw = IntVar()\u000a        self.entry_ipaddr = StringVar()\u000a        self.ma45_treshold_patch = IntVar()\u000a        self.phyipaddr = StringVar()\u000a        self.phymacaddr = StringVar()\u000a        self.serial_number = StringVar()\u000a        self.text_to_send = StringVar()\u000a        self.text_to_send2 = StringVar()\u000a        self._Frame2 = Frame(self)\u000a        self._Frame2.pack(fill='y',side='left')\u000a        self._Frame4 = Frame(self,background='#dbdbdb')\u000a        self._Frame4.pack(fill='y',side='left')\u000a        self._Frame3 = Frame(self)\u000a        self._Frame3.pack(side='left')\u000a        self._Frame27 = Frame(self._Frame2)\u000a        self._Frame27.pack(side='top')\u000a        self._Label1 = Label(self._Frame27,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 COM-\u043f\u043e\u0440\u0442')\u000a        self._Label1.pack(side='top')\u000a        self._ComPortsList = Listbox(self._Frame27,selectmode='single')\u000a        self._ComPortsList.pack(side='top')\u000a        self._COM_port_connect = Button(self._Frame27\u000a            ,command=self._on__COM_port_connect_command,text='\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442')\u000a        self._COM_port_connect.pack(side='bottom')\u000a        self._Frame26 = Frame(self._Frame2)\u000a        self._Frame26.pack(fill='x',side='top')\u000a        self._Label3 = Label(self._Frame26,justify='left'\u000a            ,text='\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:')\u000a        self._Label3.pack(anchor='w',side='left')\u000a        self._Frame7 = Frame(self._Frame2)\u000a        self._Frame7.pack(fill='x',side='top')\u000a        self._MA41 = Radiobutton(self._Frame7,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41',value='ma41'\u000a            ,variable=self.device)\u000a        self._MA41.pack(anchor='w',side='top')\u000a        self._Frame32 = Frame(self._Frame2)\u000a        self._Frame32.pack(fill='x',side='top')\u000a        self._MA45 = Radiobutton(self._Frame32,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45',value='ma45'\u000a            ,variable=self.device)\u000a        self._MA45.pack(side='left')\u000a        self._ma45_treshold_patch = Checkbutton(self._Frame32,justify='left'\u000a            ,state='disabled',text='MA-45 patch (recomended)'\u000a            ,variable=self.ma45_treshold_patch)\u000a        self._ma45_treshold_patch.pack(side='left')\u000a        self._Frame11 = Frame(self._Frame2)\u000a        self._Frame11.pack(fill='x',side='top')\u000a        self._MA48 = Radiobutton(self._Frame11,command=self._set_serial\u000a            ,justify='left',text='\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-48',value='ma48'\u000a            ,variable=self.device)\u000a        self._MA48.pack(side='left')\u000a        self._Frame12 = Frame(self._Frame2)\u000a        self._Frame12.pack(fill='x',side='top')\u000a        self._LSR4 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204',value='lsr4'\u000a            ,variable=self.device)\u000a        self._LSR4.pack(anchor='w',side='top')\u000a        self._LSE4 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154',value='lse4'\u000a            ,variable=self.device)\u000a        self._LSE4.pack(anchor='w',side='top')\u000a        self._1M500 = Radiobutton(self._Frame12,command=self._set_serial\u000a            ,justify='left',text='\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500',value='1m500'\u000a            ,variable=self.device)\u000a        self._1M500.pack(anchor='w',side='top')\u000a        self._Frame6 = Frame(self._Frame2)\u000a        self._Frame6.pack(side='top')\u000a        self._Label2 = Label(self._Frame6,text='\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:')\u000a        self._Label2.pack(side='top')\u000a        self._serialnumber = Entry(self._Frame6,textvariable=self.serial_number)\u000a        self._serialnumber.pack(side='top')\u000a        self._prog_and_increment = Button(self._Frame6\u000a            ,command=self._on__prog_and_increment_command,state='disabled'\u000a            ,text='Write to EEPROM ataddr, ipaddr, macaddr, ifbw, wdg and increment serial number (up key)')\u000a        self._prog_and_increment.pack(side='top')\u000a        self._GasThreshold = Button(self._Frame6\u000a            ,command=self._on__GasThreshold_command,state='disabled'\u000a            ,text='Write Gas Threshold')\u000a        self._GasThreshold.pack(side='top')\u000a        self._Label9 = Label(self._Frame6,text='at addr')\u000a        self._Label9.pack(side='top')\u000a        self._ataddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ataddr)\u000a        self._ataddr.pack(side='top')\u000a        self._Label5 = Label(self._Frame6,text='phy ipaddr:')\u000a        self._Label5.pack(side='top')\u000a        self._phyipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phyipaddr)\u000a        self._phyipaddr.pack(side='top')\u000a        self._Label6 = Label(self._Frame6,text='eth ipaddr:')\u000a        self._Label6.pack(side='top')\u000a        self._ethipaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethipaddr)\u000a        self._ethipaddr.pack(side='top')\u000a        self._Label7 = Label(self._Frame6,text='phy macaddr:')\u000a        self._Label7.pack(side='top')\u000a        self._phymacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.phymacaddr)\u000a        self._phymacaddr.pack(side='top')\u000a        self._ethmacaddr = Entry(self._Frame6,state='disabled'\u000a            ,textvariable=self.ethmacaddr)\u000a        self._ethmacaddr.pack(side='bottom')\u000a        self._Label8 = Label(self._Frame6,text='eth macaddr:')\u000a        self._Label8.pack(side='bottom')\u000a        self._Frame1 = Frame(self._Frame2)\u000a        self._Frame1.pack(side='top')\u000a        self._Label10 = Label(self._Frame1,text='at frequency trim:')\u000a        self._Label10.pack(side='top')\u000a        self._Frame10 = Frame(self._Frame2)\u000a        self._Frame10.pack(side='top')\u000a        self._Frame23 = Frame(self._Frame2,background='#c0c0c0',borderwidth='10')\u000a        self._Frame23.pack(side='top')\u000a        self._Frame22 = Frame(self._Frame2)\u000a        self._Frame22.pack(side='top')\u000a        self._btn_lamp_wdg_0 = Button(self._Frame22\u000a            ,command=self._on__btn_adf_wdg_0_command,state='disabled'\u000a            ,text='lamp wdg 0')\u000a        self._btn_lamp_wdg_0.pack(side='left')\u000a        self._Frame29 = Frame(self._Frame4)\u000a        self._Frame29.pack(side='top')\u000a        self._Label4 = Label(self._Frame29,text='\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:')\u000a        self._Label4.pack(side='bottom')\u000a        self._Frame19 = Frame(self._Frame4)\u000a        self._Frame19.pack(side='top')\u000a        self._Frame14 = Frame(self._Frame4)\u000a        self._Frame14.pack(side='top')\u000a        self._label_Rcvd_Text = Label(self._Frame14\u000a            ,text='\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:')\u000a        self._label_Rcvd_Text.pack(side='top')\u000a        self._ReceivedText = Text(self._Frame14\u000a            ,font=('@Arial Unicode MS', 10, ''),height='35')\u000a        self._ReceivedText.pack(side='top')\u000a        self._Frame9 = Frame(self._Frame4)\u000a        self._Frame9.pack(fill='x',side='top')\u000a        self._btn_dbg0 = Button(self._Frame9,command=self._on__btn_dbg0_command\u000a            ,state='disabled',text='dbg 0')\u000a        self._btn_dbg0.pack(anchor='w',side='left')\u000a        self._btn_dbg1 = Button(self._Frame9,command=self._on__btn_dbg1_command\u000a            ,state='disabled',text='dbg 1')\u000a        self._btn_dbg1.pack(anchor='w',side='left')\u000a        self._Frame28 = Frame(self._Frame4)\u000a        self._Frame28.pack(fill='x',side='top')\u000a        self._btn_ping = Button(self._Frame28,command=self._on__btn_ping_command\u000a            ,state='disabled',text='ping')\u000a        self._btn_ping.pack(side='left')\u000a        self._ipaddr = Entry(self._Frame28,textvariable=self.entry_ipaddr)\u000a        self._ipaddr.pack(side='left')\u000a        self._Frame15 = Frame(self._Frame4)\u000a        self._Frame15.pack(fill='x',side='top')\u000a        self._btn_phyipaddr = Button(self._Frame15\u000a            ,command=self._on__btn_phyipaddr_command,state='disabled'\u000a            ,text='phy ipaddr')\u000a        self._btn_phyipaddr.pack(anchor='w',side='left')\u000a        self._btn_ataddr = Button(self._Frame15\u000a            ,command=self._on__btn_ataddr_command,state='disabled'\u000a            ,text='at addr')\u000a        self._btn_ataddr.pack(side='left')\u000a        self._Frame18 = Frame(self._Frame4)\u000a        self._Frame18.pack(fill='x',side='top')\u000a        self._btn_adf_tst = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_command,state='disabled'\u000a            ,text='adf tst')\u000a        self._btn_adf_tst.pack(anchor='w',side='left')\u000a        self._btn_adf_tst_50 = Button(self._Frame18\u000a            ,command=self._on__btn_adf_tst_50_command,state='disabled'\u000a            ,text='adf tst 50')\u000a        self._btn_adf_tst_50.pack(anchor='w',side='left')\u000a        self._Frame16 = Frame(self._Frame4)\u000a        self._Frame16.pack(fill='x',side='top')\u000a        self._btn_at_dst_rt = Button(self._Frame16\u000a            ,command=self._on__btn_at_dst_rt_command,state='disabled'\u000a            ,text='at dst 0xXXXX + rt')\u000a        self._btn_at_dst_rt.pack(anchor='w',side='left')\u000a        self._entry_at_addr = Entry(self._Frame16\u000a            ,textvariable=self.entry_at_addr)\u000a        self._entry_at_addr.pack(side='left')\u000a        self._Frame17 = Frame(self._Frame4)\u000a        self._Frame17.pack(fill='x',side='top')\u000a        self._Label11 = Label(self._Frame17,text='\u041b\u0421-\u04204:')\u000a        self._Label11.pack(side='left')\u000a        self._entry_at_addr_exe = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_exe)\u000a        self._entry_at_addr_exe.pack(side='left')\u000a        self._btn_exe_at_dst_rt = Button(self._Frame17\u000a            ,command=self._on__btn_exe_at_dst_rt_command,state='disabled'\u000a            ,text='exe 0xXXXX at dst 0xXXXX + rt')\u000a        self._btn_exe_at_dst_rt.pack(side='left')\u000a        self._Label12 = Label(self._Frame17,text='\u041c\u0410:')\u000a        self._Label12.pack(side='left')\u000a        self._entry_at_addr_rt = Entry(self._Frame17\u000a            ,textvariable=self.entry_at_addr_rt)\u000a        self._entry_at_addr_rt.pack(side='left')\u000a        self._Frame20 = Frame(self._Frame4)\u000a        self._Frame20.pack(fill='x',side='top')\u000a        self._Label13 = Label(self._Frame20,text='\u0414\u043b\u044f \u043a\u0430\u0441\u0441\u0435\u0442\u044b 1-\u041c-5:')\u000a        self._Label13.pack(side='left')\u000a        self._Frame21 = Frame(self._Frame4)\u000a        self._Frame21.pack(fill='x',side='top')\u000a        self._btn_root = Button(self._Frame21,command=self._on__btn_root_command\u000a            ,state='disabled',text='root')\u000a        self._btn_root.pack(anchor='w',side='left')\u000a        self._btn_talnakh = Button(self._Frame21\u000a            ,command=self._on__btn_tanakh_command,state='disabled'\u000a            ,text='talnakh')\u000a        self._btn_talnakh.pack(side='left')\u000a        self._btn_enter = Button(self._Frame21\u000a            ,command=self._on__btn_enter_command,state='disabled'\u000a            ,text='Enter key')\u000a        self._btn_enter.pack(side='left')\u000a        self._btn_dev_mac = Button(self._Frame21\u000a            ,command=self._on__btn_dev_mac_command,state='disabled'\u000a            ,text='dev mac')\u000a        self._btn_dev_mac.pack(side='left')\u000a        self._entry_dev_mac = Entry(self._Frame21,textvariable=self.dev_mac)\u000a        self._entry_dev_mac.pack(side='left')\u000a        self._btn_dev_req = Button(self._Frame21\u000a            ,command=self._on__btn_dev_req_command,state='disabled'\u000a            ,text='dev req')\u000a        self._btn_dev_req.pack(side='left')\u000a        self._Frame5 = Frame(self._Frame10)\u000a        self._Frame5.pack(side='left')\u000a        self._left = Button(self._Frame5,command=self._on__left_command\u000a            ,state='disabled',text='<-------(left key)--at trim left')\u000a        self._left.pack(side='right')\u000a        self._Frame13 = Frame(self._Frame10)\u000a        self._Frame13.pack(side='left')\u000a        self._right = Button(self._Frame13,command=self._on__right_command\u000a            ,state='disabled',text='at trim right--(right key)------->')\u000a        self._right.pack(side='left')\u000a        self._Frame8 = Frame(self._Frame10)\u000a        self._Frame8.pack(side='left')\u000a        self._ArrowKeysOn = Checkbutton(self._Frame8\u000a            ,text='Arrow keys control on',variable=self.ArrowKeysOn)\u000a        self._ArrowKeysOn.pack(side='left')\u000a        self._Frame25 = Frame(self._Frame23)\u000a        self._Frame25.pack(side='left')\u000a        self._ifbw0 = Radiobutton(self._Frame25,text='ifbw 0 (\u0434\u043b\u044f ADF7021)'\u000a            ,value=0,variable=self.ifbw)\u000a        self._ifbw0.pack(side='top')\u000a        self._ifbw1 = Radiobutton(self._Frame25,text='ifbw 1 (\u0434\u043b\u044f ADF7021-N)'\u000a            ,value=1,variable=self.ifbw)\u000a        self._ifbw1.pack(side='top')\u000a        self._Frame24 = Frame(self._Frame23)\u000a        self._Frame24.pack(side='left')\u000a        self._set_ifbw = Button(self._Frame24,command=self._on__set_ifbw_command\u000a            ,state='disabled',text='Set IFBW')\u000a        self._set_ifbw.pack(side='left')\u000a        self._Frame31 = Frame(self._Frame19)\u000a        self._Frame31.pack(expand='yes',fill='x',side='left')\u000a        self._text_to_send = Entry(self._Frame31,textvariable=self.text_to_send)\u000a        self._text_to_send.pack(side='top')\u000a        self._send = Button(self._Frame31,command=self._on__send_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send.pack(fill='x',side='top')\u000a        self._Frame30 = Frame(self._Frame19)\u000a        self._Frame30.pack(expand='yes',fill='x',side='left')\u000a        self._text_to_send2 = Entry(self._Frame30\u000a            ,textvariable=self.text_to_send2)\u000a        self._text_to_send2.pack(side='top')\u000a        self._send2 = Button(self._Frame30,command=self._on__send2_command\u000a            ,state='disabled',text='\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443')\u000a        self._send2.pack(side='top')\u000a
p87
aV        #\u000a        #Your code here\u000a        #\u000a        \u000a        found = False\u000a \u000a        for i in range(5,64) :\u000a            try :\u000a                port = "COM"+str(i)\u000a                ser = serial.Serial(port)\u000a                ser.close()\u000a                self._ComPortsList.insert(0, port)\u000a                found = True\u000a            except serial.serialutil.SerialException :\u000a                pass\u000a \u000a        if not found :\u000a            mbox.showerror("\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0440\u0442\u043e\u0432 \u043d\u0435 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043e")\u000a        \u000a\u000a            \u000a\u000a        \u000a        self.device.set(config.get("LAST", "mode"))\u000a        self.serial_number.set(config.get("LAST", "serial"))        \u000a        self.ifbw.set(0)\u000a        \u000a\u000a        self.text_to_send.set(str("exe 0x0003 sys info"))\u000a        self.text_to_send2.set(str("exe 7 exe 2 sys info"))\u000a        \u000a        self.entry_ipaddr.set('10.2.1.20')\u000a        self.entry_at_addr.set('0x0007')\u000a        self.entry_at_addr_exe.set('0x202')\u000a        self.entry_at_addr_rt.set('0x104d')\u000a        self.dev_mac.set('12345')\u000a        self.ma45_treshold_patch.set(1)\u000a        \u000a
p88
aS'    #\n    #Start of event handler methods\n    #\n'
p89
aS'\n'
aS'\n    def _on__COM_port_connect_command(self'
p90
aV,Event=None):\u000a        global connected\u000a        try:\u000a            global ser                      \u000a            ser = serial.Serial(self._ComPortsList.get(self._ComPortsList.curselection()),timeout=0.02)\u000a            ser.baudrate = 115200\u000a            connected=1\u000a            self._COM_port_connect.config(state='disabled')\u000a            self._prog_and_increment.config(state="normal")\u000a            self._send.config(state="normal")\u000a            self._send2.config(state="normal")\u000a            self._set_ifbw.config(state="normal")\u000a            self._prog_and_increment.config(state="normal")\u000a            self._left.config(state="normal")\u000a            self._right.config(state="normal")\u000a            self._btn_ping.config(state="normal")\u000a            self._btn_phyipaddr.config(state="normal")\u000a            self._btn_ataddr.config(state="normal")\u000a            self._btn_adf_tst.config(state="normal")            \u000a            self._btn_adf_tst_50.config(state="normal")            \u000a            self._btn_dbg0.config(state="normal")\u000a            self._btn_dbg1.config(state="normal")\u000a            self._btn_at_dst_rt.config(state="normal")\u000a            self._btn_exe_at_dst_rt.config(state="normal")\u000a            self._btn_root.config(state="normal")\u000a            self._btn_talnakh.config(state="normal")\u000a            self._btn_enter.config(state="normal")           \u000a            self._btn_dev_mac.config(state="normal")\u000a            self._btn_dev_req.config(state="normal")            \u000a            self._btn_lamp_wdg_0.config(state="normal")\u000a            self._GasThreshold.config(state="normal")\u000a        except:            \u000a            connected=0\u000a            mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430", "\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442")  \u000a            \u000a        \u000a\u000a\u000a
p91
aS'\n    def _on__GasThreshold_command(self'
p92
aV,Event=None):\u000a        ok=1\u000a\u000a        if write_and_verify('at thr alm','0x05','ipaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 at thr alm")\u000a        \u000a        if write_and_verify('at thr gas','0x01','ipaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 at thr gas")\u000a        \u000a        \u000a        pass\u000a
p93
aS'\n    def _on__btn_adf_tst_50_command(self'
p94
aS",Event=None):\n        write_ram('adf tst 50')\n"
p95
aS'\n    def _on__btn_adf_tst_command(self'
p96
aS",Event=None):\n        write_ram('adf tst')\n"
p97
aS'\n    def _on__btn_adf_wdg_0_command(self'
p98
aS',Event=None):\n        lamp_wdg_0()\n'
p99
aS'\n    def _on__btn_at_dst_rt_command(self'
p100
aS",Event=None):\n        write_ram('at dst '+str(self.entry_at_addr.get()))\n        write_ram('rt')\n"
p101
aS'\n    def _on__btn_ataddr_command(self'
p102
aS",Event=None):\n        write_ram('at addr')\n"
p103
aS'\n    def _on__btn_dbg0_command(self'
p104
aS",Event=None):\n        write_ram('dbg 0')\n"
p105
aS'\n    def _on__btn_dbg1_command(self'
p106
aS",Event=None):\n        write_ram('dbg 1')\n"
p107
aS'\n    def _on__btn_dev_mac_command(self'
p108
aS",Event=None):\n        write_ram('dev mac '+str(self.dev_mac.get()))\n"
p109
aS'\n    def _on__btn_dev_req_command(self'
p110
aS",Event=None):\n        write_ram('dev req')\n"
p111
aS'\n    def _on__btn_enter_command(self'
p112
aS",Event=None):\n        write_ram('')\n"
p113
aS'\n    def _on__btn_exe_at_dst_rt_command(self'
p114
aS",Event=None):\n        write_ram('exe '+self.entry_at_addr_exe.get()+' at dst '+self.entry_at_addr_rt.get())\n        write_ram('exe '+self.entry_at_addr_exe.get()+' rt')\n"
p115
aS'\n    def _on__btn_phyipaddr_command(self'
p116
aS",Event=None):\n        write_ram('phy ipaddr')\n"
p117
aS'\n    def _on__btn_ping_command(self'
p118
aS",Event=None):\n        write_ram('ping '+str(self.entry_ipaddr.get()))\n"
p119
aS'\n    def _on__btn_root_command(self'
p120
aS",Event=None):\n        write_ram('root')\n"
p121
aS'\n    def _on__btn_tanakh_command(self'
p122
aS",Event=None):\n        write_ram('talnakh')\n"
p123
aS'\n    def _on__left_command(self'
p124
aS',Event=None):\n        global trim\n        if trim <15:\n            trim+=1\n        write_ram_eep("at trim "+str(trim)+\'\\r\')\n'
p125
aS'\n    def _on__prog_and_increment_command(self'
p126
aV,Event=None):\u000a        setup_ip_mac_etc()\u000a        ok=1\u000a\u000a        if self.device.get()=='ma48': \u000a            write_eep('init')  \u000a\u000a        if write_and_verify('at addr',self.ataddr.get(),'ataddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 at addr")\u000a\u000a        if write_and_verify('phy ipaddr',self.phyipaddr.get(),'ipaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 phy ipaddr")\u000a           \u000a        if write_and_verify('eth ipaddr',self.ethipaddr.get(),'ipaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 eth ipaddr")   \u000a           \u000a        if write_and_verify('phy macaddr',self.phymacaddr.get(),'macaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 phy macaddr")                 \u000a           \u000a        if write_and_verify('eth macaddr',self.ethmacaddr.get(),'macaddr')==0:            \u000a           ok=0\u000a           mbox.showerror("\u041e\u0448\u0438\u0431\u043a\u0430","\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 eth macaddr")\u000a           \u000a        if self.device.get()=='ma41':\u000a            self._on__set_ifbw_command()\u000a            lamp_wdg_0()\u000a        \u000a        if self.device.get()=='ma45' and self.ma45_treshold_patch.get()==1: \u000a            write_eep('at thr gas 0x01')   \u000a            write_eep('iwdg rst 3600')               \u000a\u000a        if self.device.get()=='ma48': \u000a            write_eep('at thr gas 1')   \u000a            write_eep('iwdg rst 3600') \u000a            write_eep('at wdg 1')    \u000a            write_eep('dbg 0')    \u000a        \u000a        if ok==1:\u000a            self.serial_number.set(str(int(self.serial_number.get())+1))\u000a            if int(self.serial_number.get())%1000>=255:\u000a               self.serial_number.set(int(self.serial_number.get())+746)\u000a        \u000a        config.set("LAST", "serial",self.serial_number.get())\u000a        config.set("LAST", "mode",self.device.get())\u000a        with open('last.ini', "w") as config_file:\u000a            config.write(config_file)\u000a        \u000a        \u000a
p127
aS'\n    def _on__right_command(self'
p128
aS',Event=None):\n        global trim\n        if trim >0:\n            trim-=1\n        write_ram_eep("at trim "+str(trim)+\'\\r\')\n'
p129
aS'\n    def _on__send2_command(self'
p130
aS",Event=None):\n        ser.write(self._text_to_send2.get()+'\\r')\n"
p131
aS'\n    def _on__send_command(self'
p132
aS",Event=None):\n        ser.write(self._text_to_send.get()+'\\r')\n        \n\n"
p133
aS'\n    def _on__set_ifbw_command(self'
p134
aS",Event=None):        \n        write_ram_eep('adf ifbw '+str(self.ifbw.get()))\n        \n\n"
p135
aS'\n    def _set_serial(self'
p136
aS",Event=None):\n        if self.device.get()=='ma41':\n            self.serial_number.set('16001')\n            \n        if self.device.get()=='ma45':\n            self.serial_number.set('16001')\n            \n        if self.device.get()=='ma48':\n            self.serial_number.set('16001')                     \n\n        if self.device.get()=='lsr4':\n            self.serial_number.set('1008')\n\n        if self.device.get()=='lse4':\n            self.serial_number.set('1008')\n      \n        if self.device.get()=='1m500':\n            self.serial_number.set('1008')\n            \n        setup_ip_mac_etc()\n\n\n      \n"
p137
aS'    #\n    #Start of non-Rapyd user code\n    #\n'
p138
aS''
asg7
I0
sg45
I14406783
ssg29
(lp139
(dp140
S'ModuleName'
p141
S'Tkinter'
p142
sg50
g51
sS'WidgetName'
p143
S'Frame'
p144
sS'PackOptions'
p145
(lp146
sg24
(I0
tp147
sS'XY'
p148
(I0
I0
tp149
sS'Bindings'
p150
(lp151
sS'Options'
p152
(lp153
sa(dp154
g141
S'Tkinter'
p155
sg50
S'_1M500'
p156
sg143
S'Radiobutton'
p157
sg145
(lp158
(dp159
g50
S'anchor'
p160
sS'Value'
p161
S'w'
sasg24
Nsg148
(lp162
I1817
aI3071
asg150
(lp163
sg152
(lp164
(dp165
g50
S'text'
p166
sg161
V\u041a\u0430\u0441\u0441\u0435\u0442\u0430 1-M-500
p167
sS'Extra'
p168
Nsa(dp169
g50
S'variable'
p170
sg161
S'device'
p171
sg168
S'is.as'
p172
sa(dp173
g50
S'value'
p174
sg161
S'1m500'
p175
sg168
Nsa(dp176
g50
S'command'
p177
sg161
S'_set_serial'
p178
sg168
I1
sa(dp179
g50
S'justify'
p180
sg161
S'left'
p181
sg168
Nsasa(dp182
g141
S'Tkinter'
p183
sg50
S'_ArrowKeysOn'
p184
sg143
S'Checkbutton'
p185
sg145
(lp186
sg24
Nsg148
(lp187
I1550
aI8162
asg150
(lp188
sg152
(lp189
(dp190
g50
S'text'
p191
sg161
S'Arrow keys control on'
p192
sg168
Nsa(dp193
g50
S'variable'
p194
sg161
S'ArrowKeysOn'
p195
sg168
S'sif.ai'
p196
sasa(dp197
g141
S'Tkinter'
p198
sg50
S'_COM_port_connect'
p199
sg143
S'Button'
p200
sg145
(lp201
sg24
Nsg148
(lp202
I1853
aI726
asg150
(lp203
sg152
(lp204
(dp205
g50
S'text'
p206
sg161
V\u041e\u0442\u043a\u0440\u044b\u0442\u044c COM-\u043f\u043e\u0440\u0442
p207
sg168
Nsa(dp208
g50
S'command'
p209
sg161
S'_on__COM_port_connect_command'
p210
sg168
I1
sasa(dp211
g141
S'Tkinter'
p212
sg50
S'_ComPortsList'
p213
sg143
S'Listbox'
p214
sg145
(lp215
sg24
Nsg148
(lp216
I1853
aI387
asg150
(lp217
sg152
(lp218
(dp219
g50
S'selectmode'
p220
sg161
S'single'
p221
sg168
Nsasa(dp222
g141
S'Tkinter'
p223
sg50
S'_Frame1'
p224
sg143
S'Frame'
p225
sg145
(lp226
sg24
(I0
I0
I7
tp227
sg148
g149
sg150
(lp228
sg152
(lp229
sa(dp230
g141
g223
sg50
S'_Frame10'
p231
sg143
g225
sg145
(lp232
sg24
(I0
I0
I8
tp233
sg148
g149
sg150
(lp234
sg152
(lp235
sa(dp236
g141
S'Tkinter'
p237
sg50
S'_Frame11'
p238
sg143
S'Frame'
p239
sg145
(lp240
(dp241
g50
S'fill'
p242
sg161
S'x'
sasg24
(I0
I0
I4
tp243
sg148
g149
sg150
(lp244
sg152
(lp245
sa(dp246
g141
S'Tkinter'
p247
sg50
S'_Frame12'
p248
sg143
S'Frame'
p249
sg145
(lp250
(dp251
g50
g242
sg161
S'x'
sasg24
(I0
I0
I5
tp252
sg148
g149
sg150
(lp253
sg152
(lp254
sa(dp255
g141
g223
sg50
S'_Frame13'
p256
sg143
g225
sg145
(lp257
sg24
(I0
I0
I8
I1
tp258
sg148
g149
sg150
(lp259
sg152
(lp260
sa(dp261
g141
S'Tkinter'
p262
sg50
S'_Frame14'
p263
sg143
S'Frame'
p264
sg145
(lp265
sg24
(I0
I1
I2
tp266
sg148
g149
sg150
(lp267
sg152
(lp268
sa(dp269
g141
g262
sg50
S'_Frame15'
p270
sg143
g264
sg145
(lp271
(dp272
g50
g242
sg161
S'x'
sasg24
(I0
I1
I5
tp273
sg148
g149
sg150
(lp274
sg152
(lp275
sa(dp276
g141
S'Tkinter'
p277
sg50
S'_Frame16'
p278
sg143
S'Frame'
p279
sg145
(lp280
(dp281
g50
g242
sg161
S'x'
sasg24
(I0
I1
I7
tp282
sg148
g149
sg150
(lp283
sg152
(lp284
sa(dp285
g141
g277
sg50
S'_Frame17'
p286
sg143
g279
sg145
(lp287
(dp288
g50
g242
sg161
S'x'
sasg24
(I0
I1
I8
tp289
sg148
g149
sg150
(lp290
sg152
(lp291
sa(dp292
g141
g277
sg50
S'_Frame18'
p293
sg143
g279
sg145
(lp294
(dp295
g50
g242
sg161
S'x'
sasg24
(I0
I1
I6
tp296
sg148
g149
sg150
(lp297
sg152
(lp298
sa(dp299
g141
S'Tkinter'
p300
sg50
S'_Frame19'
p301
sg143
S'Frame'
p302
sg145
(lp303
sg24
(I0
I1
I1
tp304
sg148
g149
sg150
(lp305
sg152
(lp306
sa(dp307
g141
S'Tkinter'
p308
sg50
S'_Frame2'
p309
sg143
S'Frame'
p310
sg145
(lp311
(dp312
g50
g242
sg161
S'y'
sasg24
(I0
I0
tp313
sg148
g149
sg150
(lp314
sg152
(lp315
sa(dp316
g141
g277
sg50
S'_Frame20'
p317
sg143
g279
sg145
(lp318
(dp319
g50
g242
sg161
S'x'
sasg24
(I0
I1
I9
tp320
sg148
g149
sg150
(lp321
sg152
(lp322
sa(dp323
g141
S'Tkinter'
p324
sg50
S'_Frame21'
p325
sg143
S'Frame'
p326
sg145
(lp327
(dp328
g50
g242
sg161
S'x'
sasg24
(I0
I1
I10
tp329
sg148
g149
sg150
(lp330
sg152
(lp331
sa(dp332
g141
S'Tkinter'
p333
sg50
S'_Frame22'
p334
sg143
S'Frame'
p335
sg145
(lp336
sg24
(I0
I0
I10
tp337
sg148
g149
sg150
(lp338
sg152
(lp339
sa(dp340
g141
g333
sg50
S'_Frame23'
p341
sg143
g335
sg145
(lp342
sg24
(I0
I0
I9
tp343
sg148
g149
sg150
(lp344
sg152
(lp345
(dp346
g50
S'borderwidth'
p347
sg161
S'n:10'
p348
sg168
Nsa(dp349
g50
S'background'
p350
sg161
S'c:#c0c0c0'
p351
sg168
Nsasa(dp352
g141
g333
sg50
S'_Frame24'
p353
sg143
g335
sg145
(lp354
sg24
(I0
I0
I9
I1
tp355
sg148
g149
sg150
(lp356
sg152
(lp357
sa(dp358
g141
g333
sg50
S'_Frame25'
p359
sg143
g335
sg145
(lp360
sg24
(I0
I0
I9
I0
tp361
sg148
g149
sg150
(lp362
sg152
(lp363
sa(dp364
g141
g247
sg50
S'_Frame26'
p365
sg143
g249
sg145
(lp366
(dp367
g50
g242
sg161
S'x'
sasg24
(I0
I0
I1
tp368
sg148
g149
sg150
(lp369
sg152
(lp370
sa(dp371
g141
g247
sg50
S'_Frame27'
p372
sg143
g249
sg145
(lp373
sg24
(I0
I0
I0
tp374
sg148
g149
sg150
(lp375
sg152
(lp376
sa(dp377
g141
S'Tkinter'
p378
sg50
S'_Frame28'
p379
sg143
S'Frame'
p380
sg145
(lp381
(dp382
g50
g242
sg161
S'x'
sasg24
(I0
I1
I4
tp383
sg148
g149
sg150
(lp384
sg152
(lp385
sa(dp386
g141
g300
sg50
S'_Frame29'
p387
sg143
g302
sg145
(lp388
sg24
(I0
I1
I0
tp389
sg148
g149
sg150
(lp390
sg152
(lp391
sa(dp392
g141
S'Tkinter'
p393
sg50
S'_Frame3'
p394
sg143
S'Frame'
p395
sg145
(lp396
sg24
(I0
I2
tp397
sg148
g149
sg150
(lp398
sg152
(lp399
sa(dp400
g141
g300
sg50
S'_Frame30'
p401
sg143
g302
sg145
(lp402
(dp403
g50
S'expand'
p404
sg161
S'yes'
p405
sa(dp406
g50
g242
sg161
S'x'
sasg24
(I0
I1
I1
I1
tp407
sg148
g149
sg150
(lp408
sg152
(lp409
sa(dp410
g141
g300
sg50
S'_Frame31'
p411
sg143
g302
sg145
(lp412
(dp413
g50
g404
sg161
g405
sa(dp414
g50
g242
sg161
S'x'
sasg24
(I0
I1
I1
I0
tp415
sg148
g149
sg150
(lp416
sg152
(lp417
sa(dp418
g141
S'Tkinter'
p419
sg50
S'_Frame32'
p420
sg143
S'Frame'
p421
sg145
(lp422
(dp423
g50
g242
sg161
S'x'
sasg24
(I0
I0
I3
tp424
sg148
g149
sg150
(lp425
sg152
(lp426
sa(dp427
g141
g393
sg50
S'_Frame4'
p428
sg143
g395
sg145
(lp429
(dp430
g50
g242
sg161
S'y'
sasg24
(I0
I1
tp431
sg148
g149
sg150
(lp432
sg152
(lp433
(dp434
g50
g350
sg161
S'c:#dbdbdb'
p435
sg168
Nsasa(dp436
g141
g223
sg50
S'_Frame5'
p437
sg143
g225
sg145
(lp438
sg24
(I0
I0
I8
I0
tp439
sg148
g149
sg150
(lp440
sg152
(lp441
sa(dp442
g141
g223
sg50
S'_Frame6'
p443
sg143
g225
sg145
(lp444
sg24
(I0
I0
I6
tp445
sg148
g149
sg150
(lp446
sg152
(lp447
sa(dp448
g141
g237
sg50
S'_Frame7'
p449
sg143
g239
sg145
(lp450
(dp451
g50
g242
sg161
S'x'
sasg24
(I0
I0
I2
tp452
sg148
g149
sg150
(lp453
sg152
(lp454
sa(dp455
g141
S'Tkinter'
p456
sg50
S'_Frame8'
p457
sg143
S'Frame'
p458
sg145
(lp459
sg24
(I0
I0
I8
I2
tp460
sg148
g149
sg150
(lp461
sg152
(lp462
sa(dp463
g141
g262
sg50
S'_Frame9'
p464
sg143
g264
sg145
(lp465
(dp466
g50
g242
sg161
S'x'
sasg24
(I0
I1
I3
tp467
sg148
g149
sg150
(lp468
sg152
(lp469
sa(dp470
g141
S'Tkinter'
p471
sg50
S'_GasThreshold'
p472
sg143
S'Button'
p473
sg145
(lp474
sg24
Nsg148
(lp475
I1865
aI4353
asg150
(lp476
sg152
(lp477
(dp478
g50
g206
sg161
S'Write Gas Threshold'
p479
sg168
Nsa(dp480
g50
S'state'
p481
sg161
S'disabled'
p482
sg168
Nsa(dp483
g50
g209
sg161
S'_on__GasThreshold_command'
p484
sg168
I1
sasa(dp485
g141
g155
sg50
S'_LSE4'
p486
sg143
g157
sg145
(lp487
(dp488
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp489
I1805
aI2793
asg150
(lp490
sg152
(lp491
(dp492
g50
g166
sg161
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04154
p493
sg168
Nsa(dp494
g50
g170
sg161
S'device'
p495
sg168
S'is.as'
p496
sa(dp497
g50
g174
sg161
S'lse4'
p498
sg168
Nsa(dp499
g50
g177
sg161
g178
sg168
I1
sa(dp500
g50
g180
sg161
g181
sg168
Nsasa(dp501
g141
g155
sg50
S'_LSR4'
p502
sg143
g157
sg145
(lp503
(dp504
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp505
I1817
aI2539
asg150
(lp506
sg152
(lp507
(dp508
g50
g166
sg161
V\u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u041b\u0421-\u04204
p509
sg168
Nsa(dp510
g50
g170
sg161
S'device'
p511
sg168
S'is.as'
p512
sa(dp513
g50
g174
sg161
S'lsr4'
p514
sg168
Nsa(dp515
g50
g177
sg161
g178
sg168
I1
sa(dp516
g50
g180
sg161
g181
sg168
Nsasa(dp517
g141
g198
sg50
S'_Label1'
p518
sg143
S'Label'
p519
sg145
(lp520
sg24
Nsg148
(lp521
I1865
aI85
asg150
(lp522
sg152
(lp523
(dp524
g50
S'text'
p525
sg161
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 COM-\u043f\u043e\u0440\u0442
p526
sg168
Nsasa(dp527
g141
S'Tkinter'
p528
sg50
S'_Label10'
p529
sg143
S'Label'
p530
sg145
(lp531
sg24
Nsg148
(lp532
I1360
aI7521
asg150
(lp533
sg152
(lp534
(dp535
g50
g525
sg161
S'at frequency trim:'
p536
sg168
Nsasa(dp537
g141
S'Tkinter'
p538
sg50
S'_Label11'
p539
sg143
S'Label'
p540
sg145
(lp541
sg24
Nsg148
(lp542
I3498
aI8767
asg150
(lp543
sg152
(lp544
(dp545
g50
g525
sg161
V\u041b\u0421-\u04204:
p546
sg168
Nsasa(dp547
g141
g538
sg50
S'_Label12'
p548
sg143
g540
sg145
(lp549
sg24
Nsg148
(lp550
I4673
aI8815
asg150
(lp551
sg152
(lp552
(dp553
g50
g525
sg161
V\u041c\u0410:
p554
sg168
Nsasa(dp555
g141
S'Tkinter'
p556
sg50
S'_Label13'
p557
sg143
S'Label'
p558
sg145
(lp559
sg24
Nsg148
(lp560
I3361
aI9154
asg150
(lp561
sg152
(lp562
(dp563
g50
g525
sg161
V\u0414\u043b\u044f \u043a\u0430\u0441\u0441\u0435\u0442\u044b 1-\u041c-5:
p564
sg168
Nsasa(dp565
g141
S'Tkinter'
p566
sg50
S'_Label2'
p567
sg143
S'Label'
p568
sg145
(lp569
sg24
Nsg148
(lp570
I1882
aI3422
asg150
(lp571
sg152
(lp572
(dp573
g50
g525
sg161
V\u0421\u0435\u0440\u0438\u0439\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440:
p574
sg168
Nsasa(dp575
g141
S'Tkinter'
p576
sg50
S'_Label3'
p577
sg143
S'Label'
p578
sg145
(lp579
(dp580
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp581
I338
aI1052
asg150
(lp582
sg152
(lp583
(dp584
g50
g525
sg161
V\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e:
p585
sg168
Nsa(dp586
g50
S'justify'
p587
sg161
g181
sg168
Nsasa(dp588
g141
g576
sg50
S'_Label4'
p589
sg143
g578
sg145
(lp590
sg24
Nsg148
(lp591
I4679
aI1330
asg150
(lp592
sg152
(lp593
(dp594
g50
g525
sg161
V\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438:
p595
sg168
Nsasa(dp596
g141
g576
sg50
S'_Label5'
p597
sg143
g578
sg145
(lp598
sg24
Nsg148
(lp599
I1871
aI5163
asg150
(lp600
sg152
(lp601
(dp602
g50
g525
sg161
S'phy ipaddr:'
p603
sg168
Nsasa(dp604
g141
g576
sg50
S'_Label6'
p605
sg143
g578
sg145
(lp606
sg24
Nsg148
(lp607
I1865
aI5683
asg150
(lp608
sg152
(lp609
(dp610
g50
g525
sg161
S'eth ipaddr:'
p611
sg168
Nsasa(dp612
g141
g576
sg50
S'_Label7'
p613
sg143
g578
sg145
(lp614
sg24
Nsg148
(lp615
I1859
aI6227
asg150
(lp616
sg152
(lp617
(dp618
g50
g525
sg161
S'phy macaddr:'
p619
sg168
Nsasa(dp620
g141
g576
sg50
S'_Label8'
p621
sg143
g578
sg145
(lp622
sg24
Nsg148
(lp623
I1853
aI6832
asg150
(lp624
sg152
(lp625
(dp626
g50
g525
sg161
S'eth macaddr:'
p627
sg168
Nsasa(dp628
g141
S'Tkinter'
p629
sg50
S'_Label9'
p630
sg143
S'Label'
p631
sg145
(lp632
sg24
Nsg148
(lp633
I1876
aI4619
asg150
(lp634
sg152
(lp635
(dp636
g50
g525
sg161
S'at addr'
p637
sg168
Nsasa(dp638
g141
g155
sg50
S'_MA41'
p639
sg143
g157
sg145
(lp640
(dp641
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp642
I344
aI1366
asg150
(lp643
sg152
(lp644
(dp645
g50
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-41
p646
sg168
Nsa(dp647
g50
g170
sg161
S'device'
p648
sg168
S'is.as'
p649
sa(dp650
g50
g174
sg161
S'ma41'
p651
sg168
Nsa(dp652
g50
g177
sg161
g178
sg168
I1
sa(dp653
g50
g180
sg161
g181
sg168
Nsasa(dp654
g141
g155
sg50
S'_MA45'
p655
sg143
g157
sg145
(lp656
sg24
Nsg148
(lp657
I356
aI1705
asg150
(lp658
sg152
(lp659
(dp660
g50
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-45
p661
sg168
Nsa(dp662
g50
g170
sg161
S'device'
p663
sg168
S'is.as'
p664
sa(dp665
g50
g174
sg161
S'ma45'
p666
sg168
Nsa(dp667
g50
g177
sg161
g178
sg168
I1
sa(dp668
g50
g180
sg161
S'left'
p669
sg168
Nsasa(dp670
g141
S'Tkinter'
p671
sg50
S'_MA48'
p672
sg143
S'Radiobutton'
p673
sg145
(lp674
sg24
Nsg148
(lp675
I321
aI2140
asg150
(lp676
sg152
(lp677
(dp678
g50
g166
sg161
V\u041c\u043e\u0434\u0443\u043b\u044c \u041c\u0410-48
p679
sg168
Nsa(dp680
g50
g170
sg161
S'device'
p681
sg168
S'is.as'
p682
sa(dp683
g50
g174
sg161
S'ma48'
p684
sg168
Nsa(dp685
g50
g177
sg161
S'_set_serial'
p686
sg168
I1
sa(dp687
g50
g180
sg161
g669
sg168
Nsasa(dp688
g141
g198
sg50
S'_ReceivedText'
p689
sg143
S'Text'
p690
sg145
(lp691
sg24
Nsg148
(lp692
I5160
aI5018
asg150
(lp693
sg152
(lp694
(dp695
g50
S'height'
p696
sg161
S'n:35'
p697
sg168
Nsa(dp698
g50
S'font'
p699
sg161
(S'@Arial Unicode MS'
I10
S''
tp700
sg168
Nsasa(dp701
g141
g629
sg50
S'_ataddr'
p702
sg143
S'Entry'
p703
sg145
(lp704
sg24
Nsg148
(lp705
I1871
aI4885
asg150
(lp706
sg152
(lp707
(dp708
g50
S'state'
p709
sg161
S'disabled'
p710
sg168
Nsa(dp711
g50
S'textvariable'
p712
sg161
S'ataddr'
p713
sg168
S's.as'
p714
sasa(dp715
g141
S'Tkinter'
p716
sg50
S'_btn_adf_tst'
p717
sg143
S'Button'
p718
sg145
(lp719
(dp720
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp721
I3735
aI7074
asg150
(lp722
sg152
(lp723
(dp724
g50
g206
sg161
S'adf tst'
p725
sg168
Nsa(dp726
g50
g481
sg161
S'disabled'
p727
sg168
Nsa(dp728
g50
g209
sg161
S'_on__btn_adf_tst_command'
p729
sg168
I1
sasa(dp730
g141
g716
sg50
S'_btn_adf_tst_50'
p731
sg143
g718
sg145
(lp732
(dp733
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp734
I4014
aI7098
asg150
(lp735
sg152
(lp736
(dp737
g50
g206
sg161
S'adf tst 50'
p738
sg168
Nsa(dp739
g50
g481
sg161
g727
sg168
Nsa(dp740
g50
g209
sg161
S'_on__btn_adf_tst_50_command'
p741
sg168
I1
sasa(dp742
g141
g716
sg50
S'_btn_at_dst_rt'
p743
sg143
g718
sg145
(lp744
(dp745
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp746
I3504
aI8319
asg150
(lp747
sg152
(lp748
(dp749
g50
g206
sg161
S'at dst 0xXXXX + rt'
p750
sg168
Nsa(dp751
g50
g481
sg161
g727
sg168
Nsa(dp752
g50
g209
sg161
S'_on__btn_at_dst_rt_command'
p753
sg168
I1
sasa(dp754
g141
g538
sg50
S'_btn_ataddr'
p755
sg143
S'Button'
p756
sg145
(lp757
sg24
Nsg148
(lp758
I4299
aI6687
asg150
(lp759
sg152
(lp760
(dp761
g50
g206
sg161
S'at addr'
p762
sg168
Nsa(dp763
g50
g481
sg161
S'disabled'
p764
sg168
Nsa(dp765
g50
g209
sg161
S'_on__btn_ataddr_command'
p766
sg168
I1
sasa(dp767
g141
g716
sg50
S'_btn_dbg0'
p768
sg143
g718
sg145
(lp769
(dp770
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp771
I3949
aI5707
asg150
(lp772
sg152
(lp773
(dp774
g50
g206
sg161
S'dbg 0'
p775
sg168
Nsa(dp776
g50
g481
sg161
g727
sg168
Nsa(dp777
g50
g209
sg161
S'_on__btn_dbg0_command'
p778
sg168
I1
sasa(dp779
g141
g716
sg50
S'_btn_dbg1'
p780
sg143
g718
sg145
(lp781
(dp782
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp783
I4382
aI5707
asg150
(lp784
sg152
(lp785
(dp786
g50
g206
sg161
S'dbg 1'
p787
sg168
Nsa(dp788
g50
g481
sg161
g727
sg168
Nsa(dp789
g50
g209
sg161
S'_on__btn_dbg1_command'
p790
sg168
I1
sasa(dp791
g141
g556
sg50
S'_btn_dev_mac'
p792
sg143
S'Button'
p793
sg145
(lp794
sg24
Nsg148
(lp795
I4068
aI9528
asg150
(lp796
sg152
(lp797
(dp798
g50
g206
sg161
S'dev mac'
p799
sg168
Nsa(dp800
g50
g481
sg161
S'disabled'
p801
sg168
Nsa(dp802
g50
g209
sg161
S'_on__btn_dev_mac_command'
p803
sg168
I1
sasa(dp804
g141
g556
sg50
S'_btn_dev_req'
p805
sg143
g793
sg145
(lp806
sg24
Nsg148
(lp807
I4673
aI9504
asg150
(lp808
sg152
(lp809
(dp810
g50
g206
sg161
S'dev req'
p811
sg168
Nsa(dp812
g50
g481
sg161
g801
sg168
Nsa(dp813
g50
g209
sg161
S'_on__btn_dev_req_command'
p814
sg168
I1
sasa(dp815
g141
g556
sg50
S'_btn_enter'
p816
sg143
g793
sg145
(lp817
sg24
Nsg148
(lp818
I3824
aI9565
asg150
(lp819
sg152
(lp820
(dp821
g50
g206
sg161
S'Enter key'
p822
sg168
Nsa(dp823
g50
g481
sg161
g801
sg168
Nsa(dp824
g50
g209
sg161
S'_on__btn_enter_command'
p825
sg168
I1
sasa(dp826
g141
g716
sg50
S'_btn_exe_at_dst_rt'
p827
sg143
g718
sg145
(lp828
sg24
Nsg148
(lp829
I4359
aI8815
asg150
(lp830
sg152
(lp831
(dp832
g50
g206
sg161
S'exe 0xXXXX at dst 0xXXXX + rt'
p833
sg168
Nsa(dp834
g50
g481
sg161
g727
sg168
Nsa(dp835
g50
g209
sg161
S'_on__btn_exe_at_dst_rt_command'
p836
sg168
I1
sasa(dp837
g141
S'Tkinter'
p838
sg50
S'_btn_lamp_wdg_0'
p839
sg143
S'Button'
p840
sg145
(lp841
sg24
Nsg148
(lp842
I404
aI9577
asg150
(lp843
sg152
(lp844
(dp845
g50
g206
sg161
S'lamp wdg 0'
p846
sg168
Nsa(dp847
g50
g481
sg161
S'disabled'
p848
sg168
Nsa(dp849
g50
g209
sg161
S'_on__btn_adf_wdg_0_command'
p850
sg168
I1
sasa(dp851
g141
S'Tkinter'
p852
sg50
S'_btn_phyipaddr'
p853
sg143
S'Button'
p854
sg145
(lp855
(dp856
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp857
I3973
aI6699
asg150
(lp858
sg152
(lp859
(dp860
g50
g206
sg161
S'phy ipaddr'
p861
sg168
Nsa(dp862
g50
g481
sg161
S'disabled'
p863
sg168
Nsa(dp864
g50
g209
sg161
S'_on__btn_phyipaddr_command'
p865
sg168
I1
sasa(dp866
g141
g852
sg50
S'_btn_ping'
p867
sg143
g854
sg145
(lp868
sg24
Nsg148
(lp869
I3955
aI6227
asg150
(lp870
sg152
(lp871
(dp872
g50
g206
sg161
S'ping'
p873
sg168
Nsa(dp874
g50
g481
sg161
g863
sg168
Nsa(dp875
g50
g209
sg161
S'_on__btn_ping_command'
p876
sg168
I1
sasa(dp877
g141
g556
sg50
S'_btn_root'
p878
sg143
g793
sg145
(lp879
(dp880
g50
g160
sg161
S'w'
sasg24
Nsg148
(lp881
I3254
aI9553
asg150
(lp882
sg152
(lp883
(dp884
g50
g206
sg161
S'root'
p885
sg168
Nsa(dp886
g50
g481
sg161
g801
sg168
Nsa(dp887
g50
g209
sg161
S'_on__btn_root_command'
p888
sg168
I1
sasa(dp889
g141
g556
sg50
S'_btn_talnakh'
p890
sg143
g793
sg145
(lp891
sg24
Nsg148
(lp892
I3521
aI9565
asg150
(lp893
sg152
(lp894
(dp895
g50
g206
sg161
S'talnakh'
p896
sg168
Nsa(dp897
g50
g481
sg161
g801
sg168
Nsa(dp898
g50
g209
sg161
S'_on__btn_tanakh_command'
p899
sg168
I1
sasa(dp900
g141
g716
sg50
S'_entry_at_addr'
p901
sg143
S'Entry'
p902
sg145
(lp903
sg24
Nsg148
(lp904
I4091
aI8259
asg150
(lp905
sg152
(lp906
(dp907
g50
g712
sg161
S'entry_at_addr'
p908
sg168
S's.as'
p909
sasa(dp910
g141
g716
sg50
S'_entry_at_addr_exe'
p911
sg143
g902
sg145
(lp912
sg24
Nsg148
(lp913
I3836
aI8779
asg150
(lp914
sg152
(lp915
(dp916
g50
g712
sg161
S'entry_at_addr_exe'
p917
sg168
S's.as'
p918
sasa(dp919
g141
g716
sg50
S'_entry_at_addr_rt'
p920
sg143
g902
sg145
(lp921
sg24
Nsg148
(lp922
I4958
aI8815
asg150
(lp923
sg152
(lp924
(dp925
g50
g712
sg161
S'entry_at_addr_rt'
p926
sg168
S's.as'
p927
sasa(dp928
g141
g556
sg50
S'_entry_dev_mac'
p929
sg143
S'Entry'
p930
sg145
(lp931
sg24
Nsg148
(lp932
I4365
aI9541
asg150
(lp933
sg152
(lp934
(dp935
g50
g712
sg161
S'dev_mac'
p936
sg168
S's.as'
p937
sasa(dp938
g141
g576
sg50
S'_ethipaddr'
p939
sg143
S'Entry'
p940
sg145
(lp941
sg24
Nsg148
(lp942
I1859
aI5985
asg150
(lp943
sg152
(lp944
(dp945
g50
g709
sg161
g710
sg168
Nsa(dp946
g50
g712
sg161
S'ethipaddr'
p947
sg168
S's.as'
p948
sasa(dp949
g141
g576
sg50
S'_ethmacaddr'
p950
sg143
g940
sg145
(lp951
sg24
Nsg148
(lp952
I1847
aI7062
asg150
(lp953
sg152
(lp954
(dp955
g50
g709
sg161
g710
sg168
Nsa(dp956
g50
g712
sg161
S'ethmacaddr'
p957
sg168
S's.as'
p958
sasa(dp959
g141
S'Tkinter'
p960
sg50
S'_ifbw0'
p961
sg143
S'Radiobutton'
p962
sg145
(lp963
sg24
Nsg148
(lp964
I1295
aI8670
asg150
(lp965
sg152
(lp966
(dp967
g50
g166
sg161
Vifbw 0 (\u0434\u043b\u044f ADF7021)
p968
sg168
Nsa(dp969
g50
g170
sg161
S'ifbw'
p970
sg168
S'is.ai'
p971
sa(dp972
g50
g174
sg161
S'0'
sg168
Nsasa(dp973
g141
g960
sg50
S'_ifbw1'
p974
sg143
g962
sg145
(lp975
sg24
Nsg148
(lp976
I1271
aI8984
asg150
(lp977
sg152
(lp978
(dp979
g50
g166
sg161
Vifbw 1 (\u0434\u043b\u044f ADF7021-N)
p980
sg168
Nsa(dp981
g50
g170
sg161
S'ifbw'
p982
sg168
S'is.ai'
p983
sa(dp984
g50
g174
sg161
S'1'
sg168
Nsasa(dp985
g141
g852
sg50
S'_ipaddr'
p986
sg143
S'Entry'
p987
sg145
(lp988
sg24
Nsg148
(lp989
I4317
aI6227
asg150
(lp990
sg152
(lp991
(dp992
g50
g712
sg161
S'entry_ipaddr'
p993
sg168
S's.as'
p994
sasa(dp995
g141
g198
sg50
S'_label_Rcvd_Text'
p996
sg143
g519
sg145
(lp997
sg24
Nsg148
(lp998
I5190
aI4450
asg150
(lp999
sg152
(lp1000
(dp1001
g50
g525
sg161
V\u041f\u0440\u0438\u043d\u044f\u0442\u043e \u043e\u0442 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430:
p1002
sg168
Nsasa(dp1003
g141
g528
sg50
S'_left'
p1004
sg143
S'Button'
p1005
sg145
(lp1006
sg24
Nsg148
(lp1007
I267
aI8174
asg150
(lp1008
sg152
(lp1009
(dp1010
g50
g206
sg161
S'<-------(left key)--at trim left'
p1011
sg168
Nsa(dp1012
g50
g481
sg161
S'disabled'
p1013
sg168
Nsa(dp1014
g50
g209
sg161
S'_on__left_command'
p1015
sg168
I1
sasa(dp1016
g141
S'Tkinter'
p1017
sg50
S'_ma45_treshold_patch'
p1018
sg143
S'Checkbutton'
p1019
sg145
(lp1020
sg24
Nsg148
(lp1021
I689
aI1705
asg150
(lp1022
sg152
(lp1023
(dp1024
g50
g191
sg161
S'MA-45 patch (recomended)'
p1025
sg168
Nsa(dp1026
g50
S'state'
p1027
sg161
S'disabled'
p1028
sg168
Nsa(dp1029
g50
g194
sg161
S'ma45_treshold_patch'
p1030
sg168
S'sif.ai'
p1031
sa(dp1032
g50
S'justify'
p1033
sg161
g669
sg168
Nsasa(dp1034
g141
g576
sg50
S'_phyipaddr'
p1035
sg143
g940
sg145
(lp1036
sg24
Nsg148
(lp1037
I1859
aI5405
asg150
(lp1038
sg152
(lp1039
(dp1040
g50
g709
sg161
g710
sg168
Nsa(dp1041
g50
g712
sg161
S'phyipaddr'
p1042
sg168
S's.as'
p1043
sasa(dp1044
g141
g576
sg50
S'_phymacaddr'
p1045
sg143
g940
sg145
(lp1046
sg24
Nsg148
(lp1047
I1859
aI6518
asg150
(lp1048
sg152
(lp1049
(dp1050
g50
g709
sg161
g710
sg168
Nsa(dp1051
g50
g712
sg161
S'phymacaddr'
p1052
sg168
S's.as'
p1053
sasa(dp1054
g141
g198
sg50
S'_prog_and_increment'
p1055
sg143
g200
sg145
(lp1056
sg24
Nsg148
(lp1057
I1865
aI4027
asg150
(lp1058
sg152
(lp1059
(dp1060
g50
g206
sg161
S'Write to EEPROM ataddr, ipaddr, macaddr, ifbw, wdg and increment serial number (up key)'
p1061
sg168
Nsa(dp1062
g50
g481
sg161
S'disabled'
p1063
sg168
Nsa(dp1064
g50
g209
sg161
S'_on__prog_and_increment_command'
p1065
sg168
I1
sasa(dp1066
g141
g528
sg50
S'_right'
p1067
sg143
g1005
sg145
(lp1068
sg24
Nsg148
(lp1069
I784
aI8186
asg150
(lp1070
sg152
(lp1071
(dp1072
g50
g206
sg161
S'at trim right--(right key)------->'
p1073
sg168
Nsa(dp1074
g50
g481
sg161
g1013
sg168
Nsa(dp1075
g50
g209
sg161
S'_on__right_command'
p1076
sg168
I1
sasa(dp1077
g141
g198
sg50
S'_send'
p1078
sg143
g200
sg145
(lp1079
(dp1080
g50
g242
sg161
S'x'
sasg24
Nsg148
(lp1081
I3985
aI2938
asg150
(lp1082
sg152
(lp1083
(dp1084
g50
g206
sg161
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p1085
sg168
Nsa(dp1086
g50
g481
sg161
S'disabled'
p1087
sg168
Nsa(dp1088
g50
g209
sg161
S'_on__send_command'
p1089
sg168
I1
sasa(dp1090
g141
S'Tkinter'
p1091
sg50
S'_send2'
p1092
sg143
S'Button'
p1093
sg145
(lp1094
sg24
Nsg148
(lp1095
I4703
aI2963
asg150
(lp1096
sg152
(lp1097
(dp1098
g50
g206
sg161
V\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0443
p1099
sg168
Nsa(dp1100
g50
g481
sg161
S'disabled'
p1101
sg168
Nsa(dp1102
g50
g209
sg161
S'_on__send2_command'
p1103
sg168
I1
sasa(dp1104
g141
g198
sg50
S'_serialnumber'
p1105
sg143
S'Entry'
p1106
sg145
(lp1107
sg24
Nsg148
(lp1108
I1876
aI3688
asg150
(lp1109
sg152
(lp1110
(dp1111
g50
g712
sg161
S'serial_number'
p1112
sg168
S's.as'
p1113
sasa(dp1114
g141
S'Tkinter'
p1115
sg50
S'_set_ifbw'
p1116
sg143
S'Button'
p1117
sg145
(lp1118
sg24
Nsg148
(lp1119
I1793
aI8984
asg150
(lp1120
sg152
(lp1121
(dp1122
g50
g206
sg161
S'Set IFBW'
p1123
sg168
Nsa(dp1124
g50
g481
sg161
g710
sg168
Nsa(dp1125
g50
g209
sg161
S'_on__set_ifbw_command'
p1126
sg168
I1
sasa(dp1127
g141
g198
sg50
S'_text_to_send'
p1128
sg143
g1106
sg145
(lp1129
sg24
Nsg148
(lp1130
I3985
aI2189
asg150
(lp1131
sg152
(lp1132
(dp1133
g50
g712
sg161
S'text_to_send'
p1134
sg168
S's.as'
p1135
sasa(dp1136
g141
g1091
sg50
S'_text_to_send2'
p1137
sg143
S'Entry'
p1138
sg145
(lp1139
sg24
Nsg148
(lp1140
I4679
aI2201
asg150
(lp1141
sg152
(lp1142
(dp1143
g50
g712
sg161
S'text_to_send2'
p1144
sg168
S's.as'
p1145
sasasS'BaseClass'
p1146
g53
sg34
I1
sasS'VisibleForm'
p1147
g51
sS'SelectedForm'
p1148
g51
sg50
g6
sa.